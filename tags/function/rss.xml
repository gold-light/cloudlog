<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Function on Simple Life Cloud Log</title>
    <link>https://cloudlog.kr/tags/function/</link>
    <description>Recent content in Function on Simple Life Cloud Log</description>
    <generator>Hugo 0.134.1</generator>
    <language>ko</language>
    <lastBuildDate>Sat, 07 Jan 2023 00:00:00 +0900</lastBuildDate>
    <atom:link href="https://cloudlog.kr/tags/function/rss.xml" rel="self" type="application/rss+xml" /><item>
      <title>PHP 자주쓰는 유용한 함수 모음</title>
      <link>https://cloudlog.kr/docs/programming/php/useful-function-list/</link>
      <pubDate>Fri, 12 Aug 2022 00:00:00 +0900</pubDate>
      <guid>https://cloudlog.kr/docs/programming/php/useful-function-list/</guid>
      <description>&lt;h2 id=&#34;개요&#34;&gt;개요 &lt;a href=&#34;#%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;PHP로 개발할 때 자주 찾아보게 되는 함수들을 정리해보았습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;date&#34;&gt;Date &lt;a href=&#34;#date&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;날짜와 시간 관련 함수들입니다.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;a5033f3&#34; class=&#34;language-php &#34;&gt;&#xD;&#xA;  &lt;code&gt;&amp;lt;?php&#xD;&#xA;    // 해당달($nowMonth) 의 1일의 타임스탬프 얻기&#xD;&#xA;    $unix_time_stamp = mktime(0,0,0,$nowMonth,1,$nowYear);&#xD;&#xA;    &#xD;&#xA;    // 해당달($nowMonth) 의 요일을 숫자로 얻어오기&#xD;&#xA;    $firstday_week_num = date(w,$intTimeStamp);           &#xD;&#xA;    &#xD;&#xA;    // 해당달($nowMonth) 의 총일자수&#xD;&#xA;    $month_total_day = date(t,$intTimeStamp);    &#xD;&#xA;?&amp;gt;&lt;/code&gt;&#xD;&#xA;  &lt;/pr</description>
    </item><item>
      <title>PHP 이전 날짜, 다음 날짜 구하는 방법</title>
      <link>https://cloudlog.kr/docs/programming/php/get-prev-next-date-function/</link>
      <pubDate>Sat, 07 Jan 2023 00:00:00 +0900</pubDate>
      <guid>https://cloudlog.kr/docs/programming/php/get-prev-next-date-function/</guid>
      <description>&lt;h2 id=&#34;개요&#34;&gt;개요 &lt;a href=&#34;#%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;PHP로 개발할 때 기준 날짜 기준으로 이전 날짜, 다음 날짜를 구하는 방법을 정리해보겠습니다.&lt;br&gt;&#xA;날짜 계산하는 방법은 여러가지 있지만 이번에는 [&lt;strong&gt;$obj-&amp;gt;sub(new DateInterval(&amp;ldquo;P1D&amp;rdquo;));&lt;/strong&gt;] 방식을 이용해보겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;핵심-기능&#34;&gt;핵심 기능 &lt;a href=&#34;#%ed%95%b5%ec%8b%ac-%ea%b8%b0%eb%8a%a5&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;이전 날짜를 계산할 때는 $obj-&amp;gt;sub();&lt;br&gt;&#xA;다음 날짜를 계산할 때는 $obj-&amp;gt;add();&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;0f7e67f&#34; class=&#34;language-php &#34;&gt;&#xD;&#xA;  &lt;code&gt;&amp;lt;?php  &#xD;&#xA;    $prev_date_obj-&amp;gt;sub(new DateInterval(&amp;#34;P1D&amp;#34;));&#xD;&#xA;    $next_date_obj-&amp;gt;add(new DateInterval(&amp;#34;P1D&amp;#34;));&#xD;&#xA;?&amp;gt;&lt;/code&gt;&#xD;&#xA;  &lt;/pr</description>
    </item><item>
      <title>PHP 배열검색 array_search, array_column</title>
      <link>https://cloudlog.kr/docs/programming/php/array-search-column/</link>
      <pubDate>Thu, 23 Jun 2022 00:00:00 +0900</pubDate>
      <guid>https://cloudlog.kr/docs/programming/php/array-search-column/</guid>
      <description>&lt;h2 id=&#34;개요&#34;&gt;개요 &lt;a href=&#34;#%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;PHP에서 배열에 들어 있는 값을 검색하거나 인덱스를 찾아야 할 때 사용하는 함수가 &lt;strong&gt;array_search&lt;/strong&gt; 입니다.&lt;br&gt;&#xA;array_search 사용법을 1차원 배열과 2차원 배열 각각의 경우에 대해 살펴보겠습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1차원-배열-검색&#34;&gt;1차원 배열 검색 &lt;a href=&#34;#1%ec%b0%a8%ec%9b%90-%eb%b0%b0%ec%97%b4-%ea%b2%80%ec%83%89&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;1차원 배열에서는 간단하게 array_search(검색할 값, 배열) 형식으로 검색할 수 있고, 검색할 값의 인덱스가 리턴됩니다.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;2890f41&#34; class=&#34;language-php &#34;&gt;&#xD;&#xA;  &lt;code&gt;&amp;lt;?php&#xD;&#xA;&#xD;&#xA;    $arr_test_01 = array(101, 202, 303, 404, 505);&#xD;&#xA;    $arr_test_02 = array(&amp;#34;cpu&amp;#34;=&amp;gt;&amp;#34;intel&amp;#34;, &amp;#34;memory&amp;#34;=&amp;gt;&amp;#34;hynix&amp;#34;, &amp;#34;graphic&amp;#34;=&amp;gt;&amp;#34;nvidia&amp;#34;, &amp;#34;monitor&amp;#34;=&amp;gt;&amp;#34;lg&amp;#34;);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;    $idx_search_01 = array_search(303, $arr_test_01);&#xD;&#xA;    $idx_search_02 = array_search(&amp;#34;nvidia&amp;#34;, $arr_test_02);&#xD;&#xA;&#xD;&#xA;    echo($idx_search_01);&#xD;&#xA;    echo(&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;);&#xD;&#xA;    echo($idx_search_02);&#xD;&#xA;    echo(&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;);&#xD;&#xA;&#xD;&#xA;?&amp;gt;&lt;/code&gt;&#xD;&#xA;  &lt;/pr</description>
    </item><item>
      <title>Form Request 파라미터 설정 여부 확인하는 PHP 함수</title>
      <link>https://cloudlog.kr/docs/programming/php/request-variables-isset-parameter/</link>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0900</pubDate>
      <guid>https://cloudlog.kr/docs/programming/php/request-variables-isset-parameter/</guid>
      <description>&lt;h2 id=&#34;개요&#34;&gt;개요 &lt;a href=&#34;#%ea%b0%9c%ec%9a%94&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;웹페이지를 만들다 보면 &lt;form&gt; 태그로 여러가지 Request 파라미터를 전송하게 됩니다.&lt;br&gt;&#xA;이때 파라미터를 전송 받은 페이지에서 파라미터가 전송되었는지 즉, 변수가 설정되어 있는지 확인하는 작업이 필요한 경우가 있는데&#xA;PHP에서 좀 더 쉽게 확인할 수 있는 함수를 만들어봤습니다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;전송하는-html-페이지&#34;&gt;전송하는 HTML 페이지 &lt;a href=&#34;#%ec%a0%84%ec%86%a1%ed%95%98%eb%8a%94-html-%ed%8e%98%ec%9d%b4%ec%a7%80&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;아래와 같이 파라미터를 전송하는 HTML 페이지가 있다고 가정해보겠습니다.&lt;/p&gt;&#xA;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &#xD;&#xA;&#xD;&#xA;  &lt;div class=&#34;prism-codeblock &#34;&gt;&#xD;&#xA;  &lt;pre id=&#34;46901b4&#34; class=&#34;language-html &#34;&gt;&#xD;&#xA;  &lt;code&gt;&amp;lt;form action=&amp;#34;input_insert.php&amp;#34; method=&amp;#34;post&amp;#34;&amp;gt;&#xD;&#xA;  &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;param_1&amp;#34; name=&amp;#34;param_1&amp;#34; value=&amp;#34;value_1&amp;#34;&amp;gt;&#xD;&#xA;  &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;param_2&amp;#34; name=&amp;#34;param_2&amp;#34; value=&amp;#34;value_2&amp;#34;&amp;gt;&#xD;&#xA;  &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;param_3&amp;#34; name=&amp;#34;param_3&amp;#34; value=&amp;#34;value_3&amp;#34;&amp;gt;&#xD;&#xA;  &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;param_4&amp;#34; name=&amp;#34;param_4&amp;#34; value=&amp;#34;value_4&amp;#34;&amp;gt;&#xD;&#xA;  &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;param_5&amp;#34; name=&amp;#34;param_5&amp;#34; value=&amp;#34;value_5&amp;#34;&amp;gt;&#xD;&#xA;&amp;lt;/form&amp;gt;&lt;/code&gt;&#xD;&#xA;  &lt;/pr</description>
    </item>
  </channel>
</rss>